package newsemc.com.awit.news.newsemcapp.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import newsemc.com.awit.news.newsemcapp.dao.DiaoDuInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table DIAO_DU_INFO.
*/
public class DiaoDuInfoDao extends AbstractDao<DiaoDuInfo, String> {

    public static final String TABLENAME = "DIAO_DU_INFO";

    /**
     * Properties of entity DiaoDuInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property DocCode = new Property(0, String.class, "docCode", true, "DOC_CODE");
        public final static Property Filetitle = new Property(1, String.class, "filetitle", false, "FILETITLE");
        public final static Property Uploaddate = new Property(2, String.class, "uploaddate", false, "UPLOADDATE");
        public final static Property Num = new Property(3, String.class, "num", false, "NUM");
    };


    public DiaoDuInfoDao(DaoConfig config) {
        super(config);
    }
    
    public DiaoDuInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'DIAO_DU_INFO' (" + //
                "'DOC_CODE' TEXT PRIMARY KEY NOT NULL ," + // 0: docCode
                "'FILETITLE' TEXT," + // 1: filetitle
                "'UPLOADDATE' TEXT," + // 2: uploaddate
                "'NUM' TEXT);"); // 3: num
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'DIAO_DU_INFO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DiaoDuInfo entity) {
        stmt.clearBindings();
 
        String docCode = entity.getDocCode();
        if (docCode != null) {
            stmt.bindString(1, docCode);
        }
 
        String filetitle = entity.getFiletitle();
        if (filetitle != null) {
            stmt.bindString(2, filetitle);
        }
 
        String uploaddate = entity.getUploaddate();
        if (uploaddate != null) {
            stmt.bindString(3, uploaddate);
        }
 
        String num = entity.getNum();
        if (num != null) {
            stmt.bindString(4, num);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public DiaoDuInfo readEntity(Cursor cursor, int offset) {
        DiaoDuInfo entity = new DiaoDuInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // docCode
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // filetitle
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // uploaddate
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // num
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DiaoDuInfo entity, int offset) {
        entity.setDocCode(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setFiletitle(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setUploaddate(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setNum(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(DiaoDuInfo entity, long rowId) {
        return entity.getDocCode();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(DiaoDuInfo entity) {
        if(entity != null) {
            return entity.getDocCode();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
