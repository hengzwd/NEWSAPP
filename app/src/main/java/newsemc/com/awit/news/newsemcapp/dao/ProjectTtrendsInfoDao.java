package newsemc.com.awit.news.newsemcapp.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import newsemc.com.awit.news.newsemcapp.dao.ProjectTtrendsInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table PROJECT_TTRENDS_INFO.
*/
public class ProjectTtrendsInfoDao extends AbstractDao<ProjectTtrendsInfo, String> {

    public static final String TABLENAME = "PROJECT_TTRENDS_INFO";

    /**
     * Properties of entity ProjectTtrendsInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property Code = new Property(2, String.class, "code", false, "CODE");
        public final static Property Conxname = new Property(3, String.class, "conxname", false, "CONXNAME");
        public final static Property Aptitude = new Property(4, String.class, "aptitude", false, "APTITUDE");
        public final static Property Tenders = new Property(5, String.class, "tenders", false, "TENDERS");
        public final static Property Totallength = new Property(6, String.class, "totallength", false, "TOTALLENGTH");
        public final static Property Constractamount = new Property(7, String.class, "constractamount", false, "CONSTRACTAMOUNT");
        public final static Property Projectinfoid = new Property(8, String.class, "projectinfoid", false, "PROJECTINFOID");
    };


    public ProjectTtrendsInfoDao(DaoConfig config) {
        super(config);
    }
    
    public ProjectTtrendsInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PROJECT_TTRENDS_INFO' (" + //
                "'ID' TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "'NAME' TEXT," + // 1: name
                "'CODE' TEXT," + // 2: code
                "'CONXNAME' TEXT," + // 3: conxname
                "'APTITUDE' TEXT," + // 4: aptitude
                "'TENDERS' TEXT," + // 5: tenders
                "'TOTALLENGTH' TEXT," + // 6: totallength
                "'CONSTRACTAMOUNT' TEXT," + // 7: constractamount
                "'PROJECTINFOID' TEXT);"); // 8: projectinfoid
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PROJECT_TTRENDS_INFO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ProjectTtrendsInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String code = entity.getCode();
        if (code != null) {
            stmt.bindString(3, code);
        }
 
        String conxname = entity.getConxname();
        if (conxname != null) {
            stmt.bindString(4, conxname);
        }
 
        String aptitude = entity.getAptitude();
        if (aptitude != null) {
            stmt.bindString(5, aptitude);
        }
 
        String tenders = entity.getTenders();
        if (tenders != null) {
            stmt.bindString(6, tenders);
        }
 
        String totallength = entity.getTotallength();
        if (totallength != null) {
            stmt.bindString(7, totallength);
        }
 
        String constractamount = entity.getConstractamount();
        if (constractamount != null) {
            stmt.bindString(8, constractamount);
        }
 
        String projectinfoid = entity.getProjectinfoid();
        if (projectinfoid != null) {
            stmt.bindString(9, projectinfoid);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ProjectTtrendsInfo readEntity(Cursor cursor, int offset) {
        ProjectTtrendsInfo entity = new ProjectTtrendsInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // code
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // conxname
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // aptitude
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // tenders
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // totallength
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // constractamount
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8) // projectinfoid
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ProjectTtrendsInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setConxname(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAptitude(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setTenders(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setTotallength(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setConstractamount(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setProjectinfoid(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(ProjectTtrendsInfo entity, long rowId) {
        return entity.getId();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(ProjectTtrendsInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
