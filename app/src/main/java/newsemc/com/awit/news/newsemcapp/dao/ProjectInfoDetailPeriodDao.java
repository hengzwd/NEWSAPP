package newsemc.com.awit.news.newsemcapp.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import newsemc.com.awit.news.newsemcapp.dao.ProjectInfoDetailPeriod;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table PROJECT_INFO_DETAIL_PERIOD.
*/
public class ProjectInfoDetailPeriodDao extends AbstractDao<ProjectInfoDetailPeriod, Void> {

    public static final String TABLENAME = "PROJECT_INFO_DETAIL_PERIOD";

    /**
     * Properties of entity ProjectInfoDetailPeriod.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", false, "ID");
        public final static Property ProjectInfoId = new Property(1, String.class, "projectInfoId", false, "PROJECT_INFO_ID");
        public final static Property JyWenhao = new Property(2, String.class, "jyWenhao", false, "JY_WENHAO");
        public final static Property KyWenhao = new Property(3, String.class, "kyWenhao", false, "KY_WENHAO");
        public final static Property CsWenhao = new Property(4, String.class, "csWenhao", false, "CS_WENHAO");
        public final static Property SgWenhao = new Property(5, String.class, "sgWenhao", false, "SG_WENHAO");
        public final static Property ZdWenhao = new Property(6, String.class, "zdWenhao", false, "ZD_WENHAO");
        public final static Property SgJishu = new Property(7, String.class, "sgJishu", false, "SG_JISHU");
        public final static Property SgTouzi = new Property(8, String.class, "sgTouzi", false, "SG_TOUZI");
        public final static Property SgGongqi = new Property(9, String.class, "sgGongqi", false, "SG_GONGQI");
        public final static Property SzJdGongqi = new Property(10, String.class, "szJdGongqi", false, "SZ_JD_GONGQI");
    };


    public ProjectInfoDetailPeriodDao(DaoConfig config) {
        super(config);
    }
    
    public ProjectInfoDetailPeriodDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PROJECT_INFO_DETAIL_PERIOD' (" + //
                "'ID' TEXT," + // 0: id
                "'PROJECT_INFO_ID' TEXT," + // 1: projectInfoId
                "'JY_WENHAO' TEXT," + // 2: jyWenhao
                "'KY_WENHAO' TEXT," + // 3: kyWenhao
                "'CS_WENHAO' TEXT," + // 4: csWenhao
                "'SG_WENHAO' TEXT," + // 5: sgWenhao
                "'ZD_WENHAO' TEXT," + // 6: zdWenhao
                "'SG_JISHU' TEXT," + // 7: sgJishu
                "'SG_TOUZI' TEXT," + // 8: sgTouzi
                "'SG_GONGQI' TEXT," + // 9: sgGongqi
                "'SZ_JD_GONGQI' TEXT);"); // 10: szJdGongqi
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PROJECT_INFO_DETAIL_PERIOD'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ProjectInfoDetailPeriod entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String projectInfoId = entity.getProjectInfoId();
        if (projectInfoId != null) {
            stmt.bindString(2, projectInfoId);
        }
 
        String jyWenhao = entity.getJyWenhao();
        if (jyWenhao != null) {
            stmt.bindString(3, jyWenhao);
        }
 
        String kyWenhao = entity.getKyWenhao();
        if (kyWenhao != null) {
            stmt.bindString(4, kyWenhao);
        }
 
        String csWenhao = entity.getCsWenhao();
        if (csWenhao != null) {
            stmt.bindString(5, csWenhao);
        }
 
        String sgWenhao = entity.getSgWenhao();
        if (sgWenhao != null) {
            stmt.bindString(6, sgWenhao);
        }
 
        String zdWenhao = entity.getZdWenhao();
        if (zdWenhao != null) {
            stmt.bindString(7, zdWenhao);
        }
 
        String sgJishu = entity.getSgJishu();
        if (sgJishu != null) {
            stmt.bindString(8, sgJishu);
        }
 
        String sgTouzi = entity.getSgTouzi();
        if (sgTouzi != null) {
            stmt.bindString(9, sgTouzi);
        }
 
        String sgGongqi = entity.getSgGongqi();
        if (sgGongqi != null) {
            stmt.bindString(10, sgGongqi);
        }
 
        String szJdGongqi = entity.getSzJdGongqi();
        if (szJdGongqi != null) {
            stmt.bindString(11, szJdGongqi);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public ProjectInfoDetailPeriod readEntity(Cursor cursor, int offset) {
        ProjectInfoDetailPeriod entity = new ProjectInfoDetailPeriod( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // projectInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // jyWenhao
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // kyWenhao
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // csWenhao
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // sgWenhao
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // zdWenhao
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // sgJishu
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // sgTouzi
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // sgGongqi
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10) // szJdGongqi
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ProjectInfoDetailPeriod entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setProjectInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setJyWenhao(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setKyWenhao(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCsWenhao(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setSgWenhao(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setZdWenhao(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSgJishu(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSgTouzi(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setSgGongqi(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSzJdGongqi(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(ProjectInfoDetailPeriod entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(ProjectInfoDetailPeriod entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
