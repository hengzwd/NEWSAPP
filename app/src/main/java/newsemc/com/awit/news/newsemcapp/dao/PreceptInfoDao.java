package newsemc.com.awit.news.newsemcapp.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import newsemc.com.awit.news.newsemcapp.dao.PreceptInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table PRECEPT_INFO.
*/
public class PreceptInfoDao extends AbstractDao<PreceptInfo, String> {

    public static final String TABLENAME = "PRECEPT_INFO";

    /**
     * Properties of entity PreceptInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property Huiyiname = new Property(1, String.class, "huiyiname", false, "HUIYINAME");
        public final static Property Danwei = new Property(2, String.class, "danwei", false, "DANWEI");
        public final static Property Jiyao = new Property(3, String.class, "jiyao", false, "JIYAO");
        public final static Property Huiyitime = new Property(4, String.class, "huiyitime", false, "HUIYITIME");
    };


    public PreceptInfoDao(DaoConfig config) {
        super(config);
    }
    
    public PreceptInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PRECEPT_INFO' (" + //
                "'ID' TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "'HUIYINAME' TEXT," + // 1: huiyiname
                "'DANWEI' TEXT," + // 2: danwei
                "'JIYAO' TEXT," + // 3: jiyao
                "'HUIYITIME' TEXT);"); // 4: huiyitime
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PRECEPT_INFO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, PreceptInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String huiyiname = entity.getHuiyiname();
        if (huiyiname != null) {
            stmt.bindString(2, huiyiname);
        }
 
        String danwei = entity.getDanwei();
        if (danwei != null) {
            stmt.bindString(3, danwei);
        }
 
        String jiyao = entity.getJiyao();
        if (jiyao != null) {
            stmt.bindString(4, jiyao);
        }
 
        String huiyitime = entity.getHuiyitime();
        if (huiyitime != null) {
            stmt.bindString(5, huiyitime);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public PreceptInfo readEntity(Cursor cursor, int offset) {
        PreceptInfo entity = new PreceptInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // huiyiname
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // danwei
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // jiyao
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // huiyitime
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, PreceptInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setHuiyiname(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDanwei(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setJiyao(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setHuiyitime(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(PreceptInfo entity, long rowId) {
        return entity.getId();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(PreceptInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
