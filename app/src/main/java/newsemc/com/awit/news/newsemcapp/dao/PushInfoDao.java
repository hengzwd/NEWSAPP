package newsemc.com.awit.news.newsemcapp.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import newsemc.com.awit.news.newsemcapp.dao.PushInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table PUSH_INFO.
*/
public class PushInfoDao extends AbstractDao<PushInfo, String> {

    public static final String TABLENAME = "PUSH_INFO";

    /**
     * Properties of entity PushInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property WylcNum = new Property(0, String.class, "wylcNum", true, "WYLC_NUM");
        public final static Property OaNum = new Property(1, String.class, "oaNum", false, "OA_NUM");
        public final static Property Sum = new Property(2, String.class, "sum", false, "SUM");
    };


    public PushInfoDao(DaoConfig config) {
        super(config);
    }
    
    public PushInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PUSH_INFO' (" + //
                "'WYLC_NUM' TEXT PRIMARY KEY NOT NULL ," + // 0: wylcNum
                "'OA_NUM' TEXT," + // 1: oaNum
                "'SUM' TEXT);"); // 2: sum
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PUSH_INFO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, PushInfo entity) {
        stmt.clearBindings();
 
        String wylcNum = entity.getWylcNum();
        if (wylcNum != null) {
            stmt.bindString(1, wylcNum);
        }
 
        String oaNum = entity.getOaNum();
        if (oaNum != null) {
            stmt.bindString(2, oaNum);
        }
 
        String sum = entity.getSum();
        if (sum != null) {
            stmt.bindString(3, sum);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public PushInfo readEntity(Cursor cursor, int offset) {
        PushInfo entity = new PushInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // wylcNum
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // oaNum
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2) // sum
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, PushInfo entity, int offset) {
        entity.setWylcNum(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setOaNum(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSum(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(PushInfo entity, long rowId) {
        return entity.getWylcNum();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(PushInfo entity) {
        if(entity != null) {
            return entity.getWylcNum();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
